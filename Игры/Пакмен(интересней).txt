#include <iostream>
#include <time.h>
#include <Windows.h>
#include <conio.h>
using namespace std;
HANDLE h = GetStdHandle(STD_OUTPUT_HANDLE);
enum Keys{ UP = 72, DOWN = 80, LEFT = 75, RIGHT = 77, ESC = 27 };
void main()
{
	int help = 3;
	int eror = 0;
	int end = 0;
	int all = 0;
	int count = 0;
	CONSOLE_CURSOR_INFO cci;
	cci.bVisible = false;
	cci.dwSize = 100;
	SetConsoleCursorInfo(h, &cci);
	system("mode con cols=50 lines=28");
	system("title PACMAN");
	srand(time(0));
	const int cols = 49, lines = 24;
	int field[lines][cols];
	for (int i = 0; i < lines; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			if (i == 0 || j == 0 || i == lines - 1 || j == cols - 1)
			{
				field[i][j] = 1;
			}
			else
			{
				int tem = rand() % 51;
				if (tem >= 0 && tem <= 10)
				{
					field[i][j] = 1;
				}
				else if (tem > 10 && tem <= 15)
				{
					field[i][j] = 2;
					all++;
				}
				else
					field[i][j] = 0;
			}
			if (field[i][j] == 1)
			{
				SetConsoleTextAttribute(h, 15);
				cout << char(177);
			}
			else if (field[i][j] == 2)
			{
				SetConsoleTextAttribute(h, 10);
				cout << char(248);
			}
			else if (field[i][j] == 3)
			{
				SetConsoleTextAttribute(h, 12);
				cout << char(2);
			}
			else cout << " ";
		}
		cout << endl;


	}

	for (int z = 1; z < lines - 1; z++)
	{
		for (int o = 1; o < cols - 1; o++)
		{
			for (int i = 1; i < lines - 1; i++)
			{
				for (int j = 1; j < cols - 1; j++)
				{
					if ((field[i - 1][j] == 1) && (field[i + 1][j] == 1) && (field[i][j - 1] == 1) && (field[i][j + 1] == 1))
					{
						eror++;
						field[i + 1][j] = 0;
						SetConsoleTextAttribute(h, 12);
						COORD c;
						c.X = j;
						c.Y = i + 1;
						SetConsoleCursorPosition(h, c);
						cout << "*";
					}
				}
			}
		}
	}
	

	COORD erors;
	erors.X = 0;
	erors.Y = 26;
	SetConsoleCursorPosition(h, erors);
	SetConsoleTextAttribute(h, 15);
	cout << "Blocks:" << eror;

	COORD player;
	player.X = 25;
	player.Y = 13;
	SetConsoleCursorPosition(h, player);
	SetConsoleTextAttribute(h, 14);

	COORD score;
	score.X = 0;
	score.Y = 24;
	SetConsoleTextAttribute(h, 10);
	SetConsoleCursorPosition(h, score);
	cout << "Apples: (" << count << "/" << all << ")";

	COORD hp;
	hp.X = 0;
	hp.Y = 25;
	SetConsoleTextAttribute(h, 12);
	SetConsoleCursorPosition(h, hp);
	cout << "HP: " << help;

	const int ene_count = 10;
	COORD enemies[ene_count];
	for (int i = 0; i < ene_count; i++)
	{
		enemies[i].X = rand() % (cols - 2) + 1;
		enemies[i].Y = rand() % (lines - 2) + 1;
		if (field[enemies[i].Y][enemies[i].X] != 0)
		{
			i--;
			continue;
		}
		field[enemies[i].Y][enemies[i].X] = 3;
		SetConsoleCursorPosition(h, enemies[i]);
		SetConsoleTextAttribute(h, 12);
		cout << char(2);
	}

	cout << char(1);
	while (1)
	{
		int code = _getch();
		SetConsoleCursorPosition(h, player);
		cout << " ";
		switch (code)
		{
		case 'W':
		case 'w':
		case UP:
			if (field[player.Y - 1][player.X] != 1)
				player.Y--;
			SetConsoleCursorPosition(h, player);
			SetConsoleTextAttribute(h, 14);
			cout << char(1);
			break;
		case 'A':
		case 'a':
		case LEFT:
			if (field[player.Y][player.X - 1] != 1)
				player.X--;
			SetConsoleCursorPosition(h, player);
			SetConsoleTextAttribute(h, 14);
			cout << char(125);
			break;
		case 'D':
		case 'd':
		case RIGHT:
			if (field[player.Y][player.X + 1] != 1)
				player.X++;
			SetConsoleCursorPosition(h, player);
			SetConsoleTextAttribute(h, 14);
			cout << char(123);
			break;
		case 'S':
		case 's':
		case DOWN:
			if (field[player.Y + 1][player.X] != 1)
				player.Y++;
			SetConsoleCursorPosition(h, player);
			SetConsoleTextAttribute(h, 14);
			cout << char(94);
			break;
		case ESC:
			cout << "Bye,I had a great time!\n";
			exit(0);
			break;
		}
		for (int i = 0; i < ene_count; i++)
		{
			SetConsoleCursorPosition(h, enemies[i]);
			field[enemies[i].Y][enemies[i].X] = 0;
			cout << " ";
			int direction = rand() % 4;
			switch (direction)
			{
			case 0:
				if (field[enemies[i].Y - 1][enemies[i].X] == 0)
					enemies[i].Y--;
				break;
			case 1:
				if (field[enemies[i].Y][enemies[i].X - 1] == 0)
					enemies[i].X--;
				break;
			case 2:
				if (field[enemies[i].Y][enemies[i].X + 1] == 0)
					enemies[i].X++;
				break;
			case 3:
				if (field[enemies[i].Y + 1][enemies[i].X] == 0)
					enemies[i].Y++;
				break;
			}
			SetConsoleCursorPosition(h, enemies[i]);
			SetConsoleTextAttribute(h, 12);
			cout << char(2);
			field[enemies[i].Y][enemies[i].X] = 3;
		}
		if (field[player.Y][player.X] == 3)
		{
			help--;
			SetConsoleCursorPosition(h, hp);
			SetConsoleTextAttribute(h, 12);
			cout << "HP: " << help;
		}
		else if (end == help)
		{
			system("cls");
			SetConsoleTextAttribute(h, 12);
			cout << "Game over!" << endl;
			cout << "Bye,I had a great time!\n";
			exit(0);
			break;
		}
		else if (field[player.Y][player.X] == 2)
		{
			field[player.Y][player.X] = 0;
			count++;
			SetConsoleTextAttribute(h, 10);
			SetConsoleCursorPosition(h, score);
			cout << "Apples: (" << count << "/" << all << ")";
		}
		else if (all == count)
		{
			system("cls");
			SetConsoleTextAttribute(h, 10);
			cout << "Congratulation! You collected all apples!" << endl;
			cout << "Bye,I had a great time!\n";
			exit(0);
			break;
		}
	}
	system("pause");

}