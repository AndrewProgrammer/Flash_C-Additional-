#include <iostream>
using namespace std;
union direction
{
	int km;
	long mile;
};
void main()
{
	direction walk;
	walk.mile = 50;
	cout << walk.km;
	walk.mile = 50;
	cout << walk.mile;
}
#include <iostream>
using namespace std;
template <typename T > T abs(T num)
{
	return num < 0 ? -num : num;
}
void main()
{
	cout << abs(-5) << endl;
	cout << abs(2.53) << endl;
	cout << abs('*') << endl;
}
#include <iostream>
using namespace std;
template <typename T , typename T2 > T2 myfunc(T num, T2 test , T select)
{
	return num + test + select;
}
void main()
{
	int  p = myfunc(2.5,6,3.5);
	cout << p << endl;
	char test = myfunc(true, 'A', false);
	cout << test << endl;
}